version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ureg-app
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
      - vendor:/var/www/html/vendor
      - node_modules:/var/www/html/node_modules
      - build:/var/www/html/public/build
      - ./storage/logs:/var/www/html/storage/logs
      - ./storage/app:/var/www/html/storage/app
    networks:
      - ureg-network
    depends_on:
      - db
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - DB_HOST=db
      - DB_DATABASE=forex
      - DB_USERNAME=ureg
      - DB_PASSWORD=ureg_password

  web:
    image: nginx:alpine
    container_name: ureg-nginx
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./:/var/www/html
      - vendor:/var/www/html/vendor
      - node_modules:/var/www/html/node_modules
      - build:/var/www/html/public/build
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - ureg-network
    depends_on:
      - app

  db:
    image: mysql:8.0
    container_name: ureg-db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: forex
      MYSQL_ROOT_PASSWORD: ureg_password
      MYSQL_PASSWORD: ureg_password
      MYSQL_USER: ureg
      MYSQL_ROOT_HOST: '%'
    command: --default-authentication-plugin=mysql_native_password
    volumes:
      - ureg-mysql-data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - ureg-network

networks:
  ureg-network:
    driver: bridge

volumes:
  ureg-mysql-data:
    driver: local
  vendor:
    driver: local
  node_modules:
    driver: local
  build:
    driver: local
